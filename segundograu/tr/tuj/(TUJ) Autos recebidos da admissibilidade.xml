<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(TUJ) Autos recebidos da admissibilidade">
    <description><![CDATA[Código do fluxo: TUJ_AUT_REC_ADMIS.

Descrição: Fluxo destinado ao recebimento dos processos após o sorteio de relatores.

Raia         Localização     Papel
Assessoria   Assessoria TUJ  Assessor
Assessoria   Gabinete TUJ    Magistrado
Magistrado   Assessoria TUJ  Assessor
Magistrado   Gabinete TUJ    Magistrado]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Magistrado">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('10261:5197,10260:1469')}" actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (TUJ) Autos recebidos da admissibilidade">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Assessoria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('10261:5197,10260:1469')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Magistrado"/>
        <transition to="(TUJ) Deslocamento da tarefa" name="(TUJ) Deslocamento da tarefa"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(51).comComplementoDeCodigo(3).preencherComElementoDeCodigo(36).lancarMovimento()}"/>
        </event>
    </start-state>  
    <!-- NODES -->
    <node name="(TUJ) Deslocamento da tarefa">
        <transition to="(TUJ) Lançar movimento de concluso para decisão" name="(TUJ) Lançar movimento de concluso para decisão"/>
        <event type="node-enter">
            <action name="upd" expression="#{entityManager.createNativeQuery('update tb_processo_instance set id_orgao_julgador_cargo = null where id_processo = :idProcesso').setParameter('idProcesso', tramitacaoProcessualService.recuperaVariavel('processo')).executeUpdate()}"/>
        </event>
    </node>
    <node name="(TUJ) Lançar movimento de concluso para decisão">
        <transition to="(TUJ) Autos recebidos da admissibilidade" name="(TUJ) Autos recebidos da admissibilidade"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(51).comComplementoDeCodigo(3).doTipoDominio().preencherComElementoDeCodigo(6).lancarMovimento()}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(TUJ) Autos recebidos da admissibilidade">
        <task name="(TUJ) Autos recebidos da admissibilidade" swimlane="Assessoria"/>
        <transition to="(TUJ) Lançar movimento de concluso para julgamento" name="Enviar concluso para julgamento"/>
        <transition to="Nó de Desvio - (TUJ) Autos recebidos da admissibilidade" name="Nó de Desvio - (TUJ) Autos recebidos da admissibilidade">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(TUJ) Cancelar" name="Cancelar e sair da tarefa"/>
        <event type="node-enter">
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('(TUJ) Lançar movimento de concluso')}"/>
        </event>
    </task-node>
    <node name="(TUJ) Lançar movimento de concluso para julgamento">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(51).comComplementoDeCodigo(3).doTipoDominio().preencherComElementoDeCodigo(36).lancarMovimento()}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:aut_rec_adm:transicaoSaida', 'Enviar concluso para julgamento')}"/>
        </event>
    </node>
    <node name="(TUJ) Cancelar">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('tuj:aut_rec_adm:transicaoSaida', 'Secretaria - ANALISAR')}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (TUJ) Autos recebidos da admissibilidade">
        <task name="Nó de Desvio - (TUJ) Autos recebidos da admissibilidade" swimlane="Nó de Desvio - (TUJ) Autos recebidos da admissibilidade"/>
        <transition to="Término" name="Término"/>
        <transition to="(TUJ) Autos recebidos da admissibilidade" name="(TUJ) Autos recebidos da admissibilidade"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
