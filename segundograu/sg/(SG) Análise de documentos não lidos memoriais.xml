<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Análise de documentos não lidos memoriais">
    <description><![CDATA[.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="magistrado">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('600:5899,599:1469,5:5899,6:1469')}" actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="magistrado" priority="3"/>
        <transition to="(SG) Documentos não lidos - Memoriais - ANALISAR" name="(SG) Documentos não lidos - Memoriais - ANALISAR"/>
    </start-state>  
    <!-- NODES -->
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Análise de documentos não lidos memoriais">
        <task name="Nó de Desvio - (SG) Análise de documentos não lidos memoriais" priority="3"/>
        <transition to="Término" name="Término"/>
        <transition to="(SG) Documentos não lidos - Memoriais - ANALISAR" name="(SG) Documentos não lidos - Memoriais - ANALISAR"/>
    </task-node>
    <task-node end-tasks="true" name="(SG) Documentos não lidos - Memoriais - ANALISAR">
        <task name="(SG) Documentos não lidos - Memoriais - ANALISAR" swimlane="magistrado" priority="3">
            <controller>
                <variable name="movimentacaoLote" mapped-name="movimentarLote:movimentacaoLote" access="read,write"/>
                <variable name="WEB-INF_xhtml_flx_visualizarPeticao" mapped-name="frame:WEB-INF_xhtml_flx_visualizarPeticao" access="read,write"/>
            </controller>
        </task>
        <transition to="Término" name="Término"/>
        <transition to="Nó de Desvio - (SG) Análise de documentos não lidos memoriais" name="Nó de Desvio - (SG) Análise de documentos não lidos memoriais">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-end">
            <action expression="#{processoDocumentoTrfHome.inserirDocumentoLido(visualizarPeticaoAction.documentoPrincipal)}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
            <action expression="#{empty tramitacaoProcessualService.recuperaVariavel('pje:fluxo:incidental:peticoes') ? org.jboss.seam.bpm.processInstance.contextInstance.setVariable('pje:fluxo:incidental:peticoes', entityManager.createNativeQuery('select pd.id_processo_documento from core.tb_processo_documento pd where pd.id_processo = :id_processo_trf and pd.id_tipo_processo_documento = 33 and pd.in_ativo = true and pd.id_processo_documento_bin in (select pdba.id_processo_documento_bin from client.tb_proc_doc_bin_pess_assin pdba where pdba.dt_assinatura = (select MAX(pdba2.dt_assinatura) from client.tb_proc_doc_bin_pess_assin pdba2 where pdba2.id_processo_documento_bin in (select pd2.id_processo_documento_bin from core.tb_processo_documento pd2 where pd2.id_processo = pd.id_processo and pd2.id_tipo_processo_documento = pd.id_tipo_processo_documento and pd2.in_ativo = pd.in_ativo)))').setParameter('id_processo_trf', tramitacaoProcessualService.recuperaProcesso().getIdProcessoTrf() ).getSingleResult().intValue() ) : ''}"/>
        </event>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
