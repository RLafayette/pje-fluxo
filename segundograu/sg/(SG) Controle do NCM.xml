<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Controle do NCM">
    <description><![CDATA[Código do fluxo: SG_CONT_NCM

Descrição: Fluxo responsável pelo controle de processos enviados para conciliação e mediação no NCM.

Raia                              Localização              Papel
Núcleo de Conciliação e Mediação  Secretaria Segundo Grau  Chefe de Secretaria]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (SG) Controle do NCM">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Núcleo de Conciliação e Mediação">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('602:1338')}" actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Núcleo de Conciliação e Mediação" priority="3"/>
        <transition to="(SG) Lançar movimento de remessa" name="(SG) Lançar movimento de remessa"/>
    </start-state>  
    <!-- NODES -->
    <node name="(SG) Lançar movimento de remessa">
        <transition to="(SG) Deslocar órgão julgador ao NCM" name="(SG) Deslocar órgão julgador ao NCM"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(123).comComplementoDeCodigo(7).doTipoLivre().preencherComTexto('Núcleo de Conciliação e Mediação').comComplementoDeCodigo(18).doTipoLivre().preencherComTexto('em análise').lancarMovimento()}"/>
        </event>
    </node>
    <node name="(SG) Deslocar órgão julgador ao NCM">
        <transition to="(SG) Autos recebidos da secretaria pelo NCM" name="(SG) Autos recebidos da secretaria pelo NCM"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.deslocarFluxoParaOrgaoDiverso(tramitacaoProcessualService.recuperaVariavel('processo'))}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:colegiadoDestino', 12)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:orgaoDestino', 44)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:orgaoCargoDestino', 52)}"/>
        </event>
    </node>
    <process-state name="(SG) Autos recebidos da secretaria pelo NCM">
        <sub-process name="(SG) Autos recebidos da secretaria pelo NCM" binding="late"/>
        <transition to="(SG) Deslocar órgão julgador à origem" name="(SG) Deslocar órgão julgador à origem"/>
    </process-state>
    <node name="(SG) Deslocar órgão julgador à origem">
        <transition to="(SG) É devolução à secretaria?" name="(SG) É devolução à secretaria?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.deslocarFluxoParaOrgaoDiverso(tramitacaoProcessualService.recuperaVariavel('processo'))}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:colegiadoDestino', tramitacaoProcessualService.recuperaProcesso().orgaoJulgadorColegiado.idOrgaoJulgadorColegiado)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:orgaoDestino', tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:deslocamento:orgaoCargoDestino', tramitacaoProcessualService.recuperaProcesso().orgaoJulgadorCargo.idOrgaoJulgadorCargo)}"/>
        </event>
    </node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('ncm:devolucao:secretaria') == true ? '(SG) Devolver autos à secretaria' : '(SG) Enviar autos ao gabinete'}" name="(SG) É devolução à secretaria?">
        <transition to="(SG) Enviar autos ao gabinete" name="(SG) Enviar autos ao gabinete"/>
        <transition to="(SG) Devolver autos à secretaria" name="(SG) Devolver autos à secretaria"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('ncm:devolucao:secretaria')}"/>
        </event>
    </decision>
    <process-state name="(SG) Enviar autos ao gabinete">
        <sub-process name="(SG) Autos recebidos da secretaria" binding="late"/>
        <transition to="(SG) Apagar variáveis do fluxo" name="(SG) Apagar variáveis do fluxo"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(123).comComplementoDeCodigo(7).doTipoLivre().preencherComTexto('Gabinete do Segundo Grau').comComplementoDeCodigo(18).preencherComTexto('por devolução').lancarMovimento()}"/>
            <action expression="#{preencherMovimento.deCodigo(51).comComplementoDeCodigo(3).doTipoDominio().preencherComElementoDeCodigo(5).lancarMovimento()}"/>
        </event>
    </process-state>
    <process-state name="(SG) Devolver autos à secretaria">
        <sub-process name="(SG) Autos recebidos do NCM" binding="late"/>
        <transition to="(SG) Apagar variáveis do fluxo" name="(SG) Apagar variáveis do fluxo"/>
        <event type="node-enter">
            <action expression="#{preencherMovimento.deCodigo(123).comComplementoDeCodigo(7).doTipoLivre().preencherComTexto('Secretaria do Segundo Grau').comComplementoDeCodigo(18).preencherComTexto('por devolução').lancarMovimento()}"/>
        </event>
    </process-state>
    <node name="(SG) Apagar variáveis do fluxo">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:deslocamento:colegiadoDestino')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:deslocamento:orgaoDestino')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:deslocamento:orgaoCargoDestino')}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Controle do NCM">
        <task name="Nó de Desvio - (SG) Controle do NCM" swimlane="Nó de Desvio - (SG) Controle do NCM" priority="3"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
