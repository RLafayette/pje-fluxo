<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(SG) Publicação no DJEN">
    <description><![CDATA[Código do fluxo: SG_PUB_DJEN
    Descrição: Fluxo destinado a publicação de expedientes no diário da justiça eletrônico.
    Raia        Localização              Papel
Secretaria  Secretaria Segundo Grau  Chefe de Secretaria  Secretaria Segundo Grau  Servidor Geral]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (SG) Publicação no DJEN">
        <assignment actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('602:1338,602:5483,602:5906,8:1338,8:5483,8:5906')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" priority="3"/>
        <transition to="(SG) Separação em Diário ou Eletrônico" name="(SG) Separação em Diário ou Eletrônico"/>
    </start-state>  
    <!-- NODES -->
    <fork name="(SG) Separação em Diário ou Eletrônico">
        <transition to="(SG) Possui meio Eletrônico?" name="(SG) Possui meio Eletrônico?"/>
        <transition to="(SG) Possui meio Diário ou Edital?" name="(SG) Possui meio Diário ou Edital?"/>
    </fork>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesEletronico().size() &gt; 0 ? '(SG) Diário da Justiça Eletrônico Nacional - PREPARAR' : '(SG) Junção em Diário ou Eletrônico'}" name="(SG) Possui meio Eletrônico?">
        <transition to="(SG) Diário da Justiça Eletrônico Nacional - PREPARAR" name="(SG) Diário da Justiça Eletrônico Nacional - PREPARAR"/>
        <transition to="(SG) Junção em Diário ou Eletrônico" name="(SG) Junção em Diário ou Eletrônico"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Diário da Justiça Eletrônico Nacional - PREPARAR">
        <task name="(SG) Diário da Justiça Eletrônico Nacional - PREPARAR" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_expedientes_diario" mapped-name="frame:Processo_Fluxo_expedientes_diario" access="read,write"/>
            </controller>
        </task>
        <transition to="(SG) Publicar expedientes no DJEN" name="Enviar expedientes ao DJEN"/>
        <transition to="(SG) Publicação no DJEN - IGNORAR" name="Ignorar envio de documentos para o DJEN"/>
        <transition to="Nó de Desvio - (SG) Publicação no DJEN" name="Nó de Desvio - (SG) Publicação no DJEN">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setVariable('mostrarBotaoGravarNoFluxo', 'false')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(SG) Publicação no DJEN - IGNORAR">
        <task name="(SG) Publicação no DJEN - IGNORAR" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Aviso_DJEN" mapped-name="textAlert:Aviso_DJEN" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[Variáveis:

Nome: Aviso_DJEN
Label: Deseja realmente ignorar a publicação no DJEN?
Escrita: Sim
Obrig.: Não
Tipo: Aviso]]></description>
        <transition to="(SG) Separação em Diário ou Eletrônico" name="Não"/>
        <transition to="(SG) Junção em Diário ou Eletrônico" name="Sim"/>
        <transition to="Nó de Desvio - (SG) Publicação no DJEN" name="Nó de Desvio - (SG) Publicação no DJEN">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setVariable('mostrarBotaoGravarNoFluxo', 'false')}"/>
        </event>
    </task-node>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesEdital().size() &gt; 0 || comunicacaoProcessualAction.getExpedientesDiario().size() &gt; 0 ? '(SG) Publicar expedientes no DJEN' : '(SG) Junção em Diário ou Eletrônico'}" name="(SG) Possui meio Diário ou Edital?">
        <transition to="(SG) Publicar expedientes no DJEN" name="(SG) Publicar expedientes no DJEN"/>
        <transition to="(SG) Junção em Diário ou Eletrônico" name="(SG) Junção em Diário ou Eletrônico"/>
    </decision>
    <node name="(SG) Publicar expedientes no DJEN">
        <transition to="(SG) Publicou no DJEN?" name="(SG) Publicou no DJEN?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:tjrn:qntEnviadosDjen', comunicacaoProcessualAction.enviarExpedientesDJE())}"/>
        </event>
    </node>
    <decision expression="#{util.eval(parametroUtil.getParametro('pje:tjrn:DefinicaoEnviouDJEN')) ? '(SG) Publicação no DJEN - AGUARDAR' : '(SG) Publicação no DJEN - IGNORAR'}" name="(SG) Publicou no DJEN?">
        <transition to="(SG) Publicação no DJEN - AGUARDAR" name="(SG) Publicação no DJEN - AGUARDAR"/>
        <transition to="(SG) Publicação no DJEN - IGNORAR" name="(SG) Publicação no DJEN - IGNORAR"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:tjrn:qntEnviadosDjen')}"/>
        </event>
    </decision>
    <task-node end-tasks="true" name="(SG) Publicação no DJEN - AGUARDAR">
        <task name="(SG) Publicação no DJEN - AGUARDAR" swimlane="Secretaria" priority="3"/>
        <transition to="Nó de Desvio - (SG) Publicação no DJEN" name="Nó de Desvio - (SG) Publicação no DJEN">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Abrir CONTPRAZOS?" name="Prosseguir">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(SG) Junção em Diário ou Eletrônico" name="Sair da tarefa"/>
        <transition to="(SG) Cancelamento de disponibilização no DJEN - CONFIRMAR" name="Cancelar envio de documento para o DJEN"/>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:aguardaPublicacaoDJE')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('frameDefaultLeavingTransition')}"/>
        </event>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:aguardaPublicacaoDJE', true)}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('frameDefaultLeavingTransition', 'Prosseguir')}"/>
        </event>
    </task-node>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('sg:pubdjen:contprazos') ? 'Sim' : 'Não'}" name="(SG) Abrir CONTPRAZOS?">
        <transition to="(SG) CONTPRAZOS" name="Sim"/>
        <transition to="Término" name="Não"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('sg:pubdjen:contprazos')}"/>
        </event>
    </decision>
    <node name="(SG) CONTPRAZOS">
        <transition to="(SG) Junção em Diário ou Eletrônico" name="(SG) Junção em Diário ou Eletrônico"/>
        <event type="node-enter">
            <action expression="#{processoJudicialService.incluirNovoFluxo(tramitacaoProcessualService.recuperaProcesso(), 'SG_CONTPRAZOS', processInstance.contextInstance.variables)}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(SG) Cancelamento de disponibilização no DJEN - CONFIRMAR">
        <task name="(SG) Cancelamento de disponibilização no DJEN - CONFIRMAR" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Aviso_DJEN_cancelamento" mapped-name="textAlert:Aviso_DJEN_cancelamento" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[Variáveis:

Nome: Aviso_DJEN_cancelamento
Label: Deseja realmente cancelar a disponibilização no DJEN?
Escrita: Sim
Obrig.: Não
Tipo: Aviso]]></description>
        <transition to="(SG) Cancelar disponibilização de expediente no DJEN" name="Sim"/>
        <transition to="(SG) Publicação no DJEN - AGUARDAR" name="Não"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
    </task-node>
    <node name="(SG) Cancelar disponibilização de expediente no DJEN">
        <transition to="(SG) Cancelou disponibilização de expedientes no DJEN?" name="(SG) Cancelou disponibilização de expedientes no DJEN?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:djen:publicacaoCanceladaSucesso', comunicacaoProcessualAction.cancelarPublicacaoDiarioExpedientesAtuais())}"/>
        </event>
    </node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('pje:fluxo:djen:publicacaoCanceladaSucesso').equals(true) ? '(SG) Junção em Diário ou Eletrônico' : '(SG) Cancelamento de disponibilização no DJEN - ERRO'}" name="(SG) Cancelou disponibilização de expedientes no DJEN?">
        <transition to="(SG) Junção em Diário ou Eletrônico" name="(SG) Junção em Diário ou Eletrônico"/>
        <transition to="(SG) Cancelamento de disponibilização no DJEN - ERRO" name="(SG) Cancelamento de disponibilização no DJEN - ERRO"/>
    </decision>
    <task-node end-tasks="true" name="(SG) Cancelamento de disponibilização no DJEN - ERRO">
        <task name="(SG) Cancelamento de disponibilização no DJEN - ERRO" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Aviso_ERRO_DJEN" mapped-name="textAlert:Aviso_ERRO_DJEN" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[Variáveis:

Nome: Aviso_ERRO_DJEN
Label: Ocorreu um erro ao tentar cancelar o envio. #{tramitacaoProcessualService.recuperaVariavel('pje:fluxo:djen:recibosPublicacoesNaoCanceladas')} Deseja tentar novamente?
Escrita: Sim
Obrig.: Não
Tipo: Aviso]]></description>
        <transition to="(SG) Cancelamento de disponibilização no DJEN - CONFIRMAR" name="Sim"/>
        <transition to="(SG) Publicação no DJEN - AGUARDAR" name="Não"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:djen:publicacaoCanceladaSucesso')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:djen:recibosPublicacoesNaoCanceladas')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
    </task-node>
    <join name="(SG) Junção em Diário ou Eletrônico">
        <transition to="Término" name="Término"/>
    </join>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (SG) Publicação no DJEN">
        <task name="Nó de Desvio - (SG) Publicação no DJEN" swimlane="Nó de Desvio - (SG) Publicação no DJEN" priority="3"/>
        <transition to="Término" name="Término"/>
        <transition to="(SG) Diário da Justiça Eletrônico Nacional - PREPARAR" name="(SG) Diário da Justiça Eletrônico Nacional - PREPARAR"/>
        <transition to="(SG) Publicação no DJEN - AGUARDAR" name="(SG) Publicação no DJEN - AGUARDAR"/>
        <transition to="(SG) Publicação no DJEN - IGNORAR" name="(SG) Publicação no DJEN - IGNORAR"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
