<?xml version="1.0" encoding="iso-8859-1"?><process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(RPP) Fluxo de preparação de ato judicial de decisão">
    <description><![CDATA[Cód: RPP_FLX_PREP_ATO_JUD_DEC.

Descrição:
Fluxo de preparação de ato judicial de decisão]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (RPP) Fluxo de preparação de ato judicial de decisão">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment actor-id="#{actor.id}" pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,6:1469')}"/>
    </swimlane>
    <swimlane name="Gabinete">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('6:1469,7:5197')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" priority="3"/>
        <transition name="(RPP) Conclusos para decisão - MINUTAR" to="(RPP) Conclusos para decisão - MINUTAR"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="(RPP) Conclusos para decisão - MINUTAR">
        <task name="(RPP) Conclusos para decisão - MINUTAR" priority="3" swimlane="Secretaria">
            <controller>
                <variable access="read,write" mapped-name="textEditSignature:minutaAtoJudicial" name="minutaAtoJudicial"/>
                <variable access="read,write" mapped-name="minutarLote:minutarLote" name="minutarLote"/>
            </controller>
        </task>
        <transition name="Encaminhar para assinatura" to="(RPP) Conclusos para decisão - ASSINAR"/>
        <transition name="(RPP) Subfluxo Autos recebidos do gabinete [decisão]" to="(RPP) Subfluxo de autos recebidos do gabinete [decisão]">
            <condition expression="#{true}"/>
        </transition>
        <transition name="Nó de Desvio - (RPP) Fluxo de preparação de ato judicial de decisão" to="Nó de Desvio - (RPP) Fluxo de preparação de ato judicial de decisão">
            <condition expression="#{true}"/>
        </transition>
        <transition name="Retornar para secretaria" to="(RPP) Subfluxo de Análise da Secretaria"/>
        <event type="task-end">
            <action expression="#{not empty tramitacaoProcessualService.recuperaVariavelTarefa('textEditSignature:minutaAtoJudicial') ? tramitacaoProcessualService.gravaVariavel('minutaEmElaboracao', tramitacaoProcessualService.recuperaVariavelTarefa('textEditSignature:minutaAtoJudicial')) : ''}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('frameDefaultLeavingTransition', '(RPP) Subfluxo Autos recebidos do gabinete [decisão]')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('mostrarBotaoGravarNoFluxo', false)}"/>
            <action expression="#{(processoHome.instance.idProcesso &gt; 0 and not empty revisarMinutaAction.processoDocumento.processoDocumentoBin.signatarios) ? lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{false}') : ''}"/>
            <action expression="#{(processoHome.instance.idProcesso &gt; 0 and not empty revisarMinutaAction.processoDocumento.processoDocumentoBin.signatarios) ? tramitacaoProcessualService.gravaVariavel('pje:atoProferido', tramitacaoProcessualService.recuperaVariavel('minutaEmElaboracao')) : ''}"/>
        </event>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds', '62,63,64')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('mostrarBotaoGravarNoFluxo', true)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:lancamentoMovimentoObrigatorio', true)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('frameDefaultLeavingTransition', '(RPP) Subfluxo Autos recebidos do gabinete [decisão]')}"/>
            <action expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{true}')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:dispensaRequeridos', 'Retornar para secretaria')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(RPP) Conclusos para decisão - ASSINAR">
        <task name="(RPP) Conclusos para decisão - ASSINAR" priority="3" swimlane="Secretaria">
            <controller>
                <variable access="read,write" mapped-name="frame:Processo_Fluxo_revisarMinuta" name="Processo_Fluxo_revisarMinuta"/>
                <variable access="read,write" mapped-name="movimentarLote:movimentarLote" name="movimentarLote"/>
            </controller>
        </task>
        <transition name="Retornar para minutar" to="(RPP) Conclusos para decisão - MINUTAR"/>
        <transition name="(RPP) Subfluxo Autos recebidos do gabinete [decisão]" to="(RPP) Subfluxo de autos recebidos do gabinete [decisão]">
            <condition expression="#{true}"/>
        </transition>
        <transition name="Nó de Desvio - (RPP) Fluxo de preparação de ato judicial de decisão" to="Nó de Desvio - (RPP) Fluxo de preparação de ato judicial de decisão">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds', '62,63,64')}"/>
            <action expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{false}')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('frameDefaultLeavingTransition', '(RPP) Subfluxo Autos recebidos do gabinete [decisão]')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:lancamentoMovimentoObrigatorio', true)}"/>
        </event>
    </task-node>
    <process-state name="(RPP) Subfluxo de autos recebidos do gabinete [decisão]">
        <sub-process binding="late" name="(RPP) Fluxo de autos recebidos do gabinete"/>
        <transition name="(RPP) Apagar variáveis do fluxo" to="(RPP) Apagar variáveis do fluxo"/>
    </process-state>
    <process-state name="(RPP) Subfluxo de Análise da Secretaria">
        <sub-process binding="late" name="(RPP) Fluxo básico geral"/>
        <transition name="Término" to="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:tjrn:rpp:sinalizacao', 'true')}"/>
        </event>
    </process-state>
    <node name="(RPP) Apagar variáveis do fluxo">
        <transition name="Término" to="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('MovimentosLancadosTemporariamente')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('condicaoLancamentoMovimentosTemporario')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('minutaEmElaboracao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('minutaAtoJudicial')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('AgrupamentosLancadosTemporariamente')}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (RPP) Fluxo de preparação de ato judicial de decisão">
        <task name="Nó de Desvio - (RPP) Fluxo de preparação de ato judicial de decisão" priority="3" swimlane="Nó de Desvio - (RPP) Fluxo de preparação de ato judicial de decisão"/>
        <transition name="(RPP) Conclusos para decisão - MINUTAR" to="(RPP) Conclusos para decisão - MINUTAR"/>
        <transition name="(RPP) Conclusos para decisão - ASSINAR" to="(RPP) Conclusos para decisão - ASSINAR"/>
        <transition name="Término" to="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
