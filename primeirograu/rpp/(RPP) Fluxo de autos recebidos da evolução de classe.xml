<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(RPP) Fluxo de autos recebidos da evolução de classe">
    <description><![CDATA[Cód: RPP_FLX_AUT_REC_EVO..

Nome: (RPP) Fluxo de autos recebidos da evolução de classe.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (RPP) Fluxo de autos recebidos da evolução de classe">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,6:1469')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" priority="3"/>
        <transition to="(RPP) Autos recebidos da evolução de classe - ANALISAR" name="(RPP) Autos recebidos da evolução de classe - ANALISAR"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="(RPP) Autos recebidos da evolução de classe - ANALISAR">
        <task name="(RPP) Autos recebidos da evolução de classe - ANALISAR" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Aviso1" mapped-name="textAlert:Aviso1" access="read,write"/>
            </controller>
        </task>
        <transition to="(RPP) Subfluxo para intimar MP" name="Intimar Ministério Público"/>
        <transition to="Nó de Desvio - (RPP) Fluxo de autos recebidos da evolução de classe" name="Nó de Desvio - (RPP) Fluxo de autos recebidos da evolução de classe">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(RPP) Subfluxo análise da secretaria" name="Encaminhar para outras providências"/>
    </task-node>
    <process-state name="(RPP) Subfluxo para intimar MP">
        <sub-process name="(RPP) Fluxo de intimação ao Ministério Público" binding="late"/>
        <transition to="Término" name="Término"/>
    </process-state>
    <process-state name="(RPP) Subfluxo análise da secretaria">
        <sub-process name="(RPP) Fluxo básico geral" binding="late"/>
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:tjrn:rpp:sinalizacao', 'true')}"/>
        </event>
    </process-state>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (RPP) Fluxo de autos recebidos da evolução de classe">
        <task name="Nó de Desvio - (RPP) Fluxo de autos recebidos da evolução de classe" swimlane="Nó de Desvio - (RPP) Fluxo de autos recebidos da evolução de classe" priority="3"/>
        <transition to="(RPP) Autos recebidos da evolução de classe - ANALISAR" name="(RPP) Autos recebidos da evolução de classe - ANALISAR"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
