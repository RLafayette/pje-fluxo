<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(VCiv) Fluxo básico de conhecimento">
    <description><![CDATA[Fluxo básico de conhecimento para varas cíveis da justiça comum..
Aguardar Perícia / Laudo Técnico / Outros...]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('-1:1338,1342:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,6:1469,8:5852,8:5853')}" />
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria" priority="3"/>
        <transition to="(VCiv) Redistribuido ?" name="(VCiv) Redistribuido ?"/>
    </start-state>  
    <!-- NODES -->
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('pje:paj:certidaosemefeito') ? '(VCiv) Análise da secretaria' : tramitacaoProcessualService.recuperaVariavel('vciv:fbc:saida_nao_sentenciado')}" name="(VCiv) Emissão de certidão sem efeito?">
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <transition to="(VCiv) Despachados urgentes" name="(VCiv) Despachados urgentes"/>
        <transition to="(VCiv) Despachados" name="(VCiv) Despachados"/>
        <transition to="(VCiv) Despachados sobre homologação e(ou) extinção" name="(VCiv) Despachados sobre homologação e(ou) extinção"/>
        <transition to="(VCiv) Dar cumprimento a ato judicial de penhora online" name="(VCiv) Dar cumprimento a ato judicial de penhora online"/>
        <transition to="(VCiv) Despachados sobre desbloqueio" name="(VCiv) Despachados sobre desbloqueio"/>
        <transition to="(VCiv) Despachados sobre suspensão" name="(VCiv) Despachados sobre suspensão"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:paj:certidaosemefeito')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:saida_nao_sentenciado')}"/>
        </event>
    </decision>
    <decision expression="#{org.jboss.seam.bpm.processInstance.contextInstance.getVariable('pje:fbc:EhDeOutroFluxo') ? 'Processos recebidos do fluxo antigo' : '(VCiv) É providência inicial?'}" name="(VCiv) Vem de outro fluxo?">
        <description><![CDATA[.]]></description>
        <transition to="Processos recebidos do fluxo antigo" name="Processos recebidos do fluxo antigo"/>
        <transition to="(VCiv) É providência inicial?" name="(VCiv) É providência inicial?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:EhDeOutroFluxo')}"/>
        </event>
    </decision>
    <decision expression="#{parametroUtil.getParametro('pje:tjrn:pg:classeJudicial:ProvidenciaInicial').contains(':'.concat(tramitacaoProcessualService.recuperaProcesso().classeJudicial.codClasseJudicial).concat(':')) ? '(VCiv) Processo com documentação insuficiente?' : '(VCiv) Tem pedido de urgência?'}" name="(VCiv) É providência inicial?">
        <description><![CDATA[Nó que define se o processo pertence as classes, 305 Liberdade Provisória com ou sem fiança, 306 Relaxamento de Prisão, 12121 Auto de Prisão ,280 Auto de Prisão em Flagrante, 279 Inquérito Policial, 272 Representação Criminal/Notícia de Crime, 278 Termo Circunstanciado.]]></description>
        <transition to="(VCiv) Tem pedido de urgência?" name="(VCiv) Tem pedido de urgência?"/>
        <transition to="(VCiv) Processo com documentação insuficiente?" name="(VCiv) Processo com documentação insuficiente?"/>
    </decision>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
        <task name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" swimlane="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" priority="3"/>
        <transition to="Término" name="Término">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Despachados" name="(VCiv) Despachados"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <transition to="(VCiv) Despachados urgentes" name="(VCiv) Despachados urgentes"/>
        <transition to="(VCiv) Análise inicial da secretaria" name="(VCiv) Análise inicial da secretaria"/>
        <transition to="(VCiv) Análise inicial da secretaria - urgente" name="(VCiv) Análise inicial da secretaria - urgente"/>
        <transition to="(VCiv) Escolher providência inicial" name="(VCiv) Escolher providência inicial"/>
        <transition to="(VCiv) Despachados sobre homologação e(ou) extinção" name="(VCiv) Despachados sobre homologação e(ou) extinção"/>
        <transition to="(VCiv) Despachados sobre desbloqueio" name="(VCiv) Despachados sobre desbloqueio"/>
        <transition to="(VCiv) Despachados sobre suspensão" name="(VCiv) Despachados sobre suspensão"/>
        <transition to="(VCIv) Sentenciados" name="(VCIv) Sentenciados"/>
        <transition to="Processos recebidos do fluxo antigo" name="Processos recebidos do fluxo antigo"/>
        <transition to="(VCIv) Sentenciados sobre homologação e extinção" name="(VCIv) Sentenciados sobre homologação e extinção"/>
        <transition to="(VCiv) Sentenciados" name="(VCiv) Sentenciados"/>
        <transition to="(VCiv) Sentenciados sobre homologação e extinção" name="(VCiv) Sentenciados sobre homologação e extinção"/>
        <transition to="(VCiv) Escolher providência inicial - Documentação insuficiente" name="(VCiv) Escolher providência inicial - Documentação insuficiente"/>
    </task-node>
    <decision expression="#{processoTrfHome.isEmPedidoUrgencia() ? '(VCiv) É Emb. Execução Fiscal - urgente?' : '(VCiv) É Emb. Execução Fiscal?'}" name="(VCiv) Tem pedido de urgência?">
        <transition to="(VCiv) É Emb. Execução Fiscal?" name="(VCiv) É Emb. Execução Fiscal?"/>
        <transition to="(VCiv) É Emb. Execução Fiscal - urgente?" name="(VCiv) É Emb. Execução Fiscal - urgente?"/>
    </decision>
    <process-state name="(VCiv) Conclusão para decisão de urgência inicial">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao_urgencia_inicial')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados urgentes')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao_urgencia_inicial', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Conclusão para despacho inicial">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:despacho')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:despacho_inicial')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:despacho', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:despacho_inicial', 'true')}"/>
        </event>
    </process-state>
    <task-node end-tasks="true" name="(VCiv) Despachados">
        <task name="(VCiv) Despachados" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[]]></description>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir despacho"/>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <transition to="(VCiv) Intimações eletrônicas" name="Intimar advogados (automaticamente)"/>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:intelet:cancelou')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:saida_intelet_cancelado')}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Despachados')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(VCiv) Análise da secretaria">
        <task name="(VCiv) Análise da secretaria" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="vciv_fbc_aguardar_laudo_tecnico" mapped-name="sim_nao:vciv_fbc_aguardar_laudo_tecnico" access="read,write"/>
                <variable name="vciv_fbc_apensar" mapped-name="sim_nao:vciv_fbc_apensar" access="read,write"/>
                <variable name="vciv_fbc_alterar_tipo_documento" mapped-name="sim_nao:vciv_fbc_alterar_tipo_documento" access="read,write"/>
                <variable name="vciv_fbc_calcular_custas" mapped-name="sim_nao:vciv_fbc_calcular_custas" access="read,write"/>
                <variable name="vciv_fbc_certificar_decurso" mapped-name="sim_nao:vciv_fbc_certificar_decurso" access="read,write"/>
                <variable name="vciv_fbc_certificar_transito" mapped-name="sim_nao:vciv_fbc_certificar_transito" access="read,write"/>
                <variable name="vciv_fbc_citar_intimar" mapped-name="sim_nao:vciv_fbc_citar_intimar" access="read,write"/>
                <variable name="vciv_fbc_controlar_audiencia" mapped-name="sim_nao:vciv_fbc_controlar_audiencia" access="read,write"/>
                <variable name="vciv_fbc_controlar_retorno_expediente" mapped-name="sim_nao:vciv_fbc_controlar_retorno_expediente" access="read,write"/>
                <variable name="vciv_fbc_encaminhar_cejusc" mapped-name="sim_nao:vciv_fbc_encaminhar_cejusc" access="read,write"/>
                <variable name="vciv_fbc_encerrar_prazo" mapped-name="sim_nao:vciv_fbc_encerrar_prazo" access="read,write"/>
                <variable name="vciv_fbc_expedir_alvaras" mapped-name="sim_nao:vciv_fbc_expedir_alvaras" access="read,write"/>
                <variable name="vciv_fbc_expedir_carta_precatoria" mapped-name="sim_nao:vciv_fbc_expedir_carta_precatoria" access="read,write"/>
                <variable name="vciv_fbc_expedir_carta_rogatoria" mapped-name="sim_nao:vciv_fbc_expedir_carta_rogatoria" access="read,write"/>
                <variable name="vciv_fbc_expedir_mandado" mapped-name="sim_nao:vciv_fbc_expedir_mandado" access="read,write"/>
                <variable name="vciv_fbc_expedir_oficio" mapped-name="sim_nao:vciv_fbc_expedir_oficio" access="read,write"/>
                <variable name="vciv_fbc_expedir_outros_documentos" mapped-name="sim_nao:vciv_fbc_expedir_outros_documentos" access="read,write"/>
                <variable name="vciv_fbc_expedir_precatorio" mapped-name="sim_nao:vciv_fbc_expedir_precatorio" access="read,write"/>
                <variable name="vciv_fbc_expedir_rpv" mapped-name="sim_nao:vciv_fbc_expedir_rpv" access="read,write"/>
                <variable name="vciv_fbc_registrar_serasajud" mapped-name="sim_nao:vciv_fbc_registrar_serasajud" access="read,write"/>
                <variable name="vciv_fbc_infojud_infoseg_consultar" mapped-name="sim_nao:vciv_fbc_infojud_infoseg_consultar" access="read,write"/>
                <variable name="vciv_fbc_intimar_mp" mapped-name="sim_nao:vciv_fbc_intimar_mp" access="read,write"/>
                <variable name="vciv_fbc_publicar_dje" mapped-name="sim_nao:vciv_fbc_publicar_dje" access="read,write"/>
                <variable name="vciv_fbc_renajud_consultar" mapped-name="sim_nao:vciv_fbc_renajud_consultar" access="read,write"/>
                <variable name="vciv_fbc_retificar_autuacao" mapped-name="sim_nao:vciv_fbc_retificar_autuacao" access="read,write"/>
                <variable name="vciv_fbc_suspender" mapped-name="sim_nao:vciv_fbc_suspender" access="read,write"/>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[]]></description>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Término" name="Término">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Dar cumprimento a ato judicial" name="01 - Prosseguir na(s) tarefa(s) selecionada(s)"/>
        <transition to="(VCiv) Limpar ações para redistribuir" name="02 - Redistribuir processo"/>
        <transition to="(VCiv) Arquivamento de processo" name="03 - Arquivar processo"/>
        <transition to="(VCiv) Cancelamento de distribuição" name="04 - Cancelar distribuição"/>
        <transition to="(VCiv) Encaminhamento para instância superior" name="05 - Encaminhar para instância superior"/>
        <transition to="(VCiv) Conclusão para decisão" name="06 - Enviar concluso para decisão">
            <condition expression="#{! (parametroUtil.getParametro('pje:tjrn:classesVEF').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().classeJudicial.codClasseJudicial).concat('_')) &amp;&amp; parametroUtil.getParametro('pje:tjrn:fluxo:ef:ojs:espec:ids').contains(' '.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat(' ')) ) }"/>
        </transition>
        <transition to="(VCiv) Encaminhar gabinete - decisão" name="06 - Enviar concluso para decisão - Execução Fiscal">
            <condition expression="#{ parametroUtil.getParametro('pje:tjrn:classesVEF').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().classeJudicial.codClasseJudicial).concat('_')) &amp;&amp; parametroUtil.getParametro('pje:tjrn:fluxo:ef:ojs:espec:ids').contains(' '.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat(' ')) }"/>
        </transition>
        <transition to="(VCiv) Conclusão para decisão de urgência" name="07 - Enviar concluso para decisão de urgência"/>
        <transition to="(VCiv) Conclusão para decisão de Emb. de Declaração" name="08 - Enviar concluso para decisão de Emb. de Declaração"/>
        <transition to="(VCiv) Conclusão para decisão sobre recurso" name="09 - Enviar concluso para decisão sobre recurso"/>
        <transition to="(VCiv) Conclusão para decisão de penhora online" name="10 - Enviar concluso para decisão de penhora online"/>
        <transition to="(VCiv) Conclusão para decisão sobre desbloqueio" name="11 - Enviar concluso para decisão de desbloqueio"/>
        <transition to="(VCiv) Conclusão para decisão sobre suspensão" name="12 - Enviar concluso para decisão de suspensão"/>
        <transition to="(VCiv) Conclusão para despacho" name="13 - Enviar concluso para despacho">
            <condition expression="#{! (parametroUtil.getParametro('pje:tjrn:classesVEF').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().classeJudicial.codClasseJudicial).concat('_')) &amp;&amp; parametroUtil.getParametro('pje:tjrn:fluxo:ef:ojs:espec:ids').contains(' '.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat(' ')) ) }"/>
        </transition>
        <transition to="(VCiv) Encaminhar gabinete - despacho" name="13 - Enviar concluso para despacho - Execução Fiscal">
            <condition expression="#{ parametroUtil.getParametro('pje:tjrn:classesVEF').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().classeJudicial.codClasseJudicial).concat('_')) &amp;&amp; parametroUtil.getParametro('pje:tjrn:fluxo:ef:ojs:espec:ids').contains(' '.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat(' ')) }"/>
        </transition>
        <transition to="(VCiv) Conclusão para despacho de cumprimento de sentença" name="14 - Enviar concluso para despacho de cumprimento de sentença"/>
        <transition to="(VCiv) Conclusão para sentença" name="15 - Enviar concluso para sentença">
            <condition expression="#{! (parametroUtil.getParametro('pje:tjrn:classesVEF').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().classeJudicial.codClasseJudicial).concat('_')) &amp;&amp; parametroUtil.getParametro('pje:tjrn:fluxo:ef:ojs:espec:ids').contains(' '.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat(' ')) ) }"/>
        </transition>
        <transition to="(VCiv) Encaminhar gabinete - sentença" name="15 - Enviar concluso para sentença - Execução Fiscal">
            <condition expression="#{ parametroUtil.getParametro('pje:tjrn:classesVEF').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().classeJudicial.codClasseJudicial).concat('_')) &amp;&amp; parametroUtil.getParametro('pje:tjrn:fluxo:ef:ojs:espec:ids').contains(' '.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat(' ')) }"/>
        </transition>
        <transition to="(VCiv) Conclusão para sentença de homologação e(ou) extinção" name="16 - Enviar concluso para sentença de homologação e/ou extinção"/>
        <transition to="(VCiv) Dar cumprimento a ato judicial de central de calculos" name="17 - Enviar à Contadoria Judicial - COJUD"/>
        <transition to="(VCiv) Penhora eletrônica - Poti" name="18 - Enviar à Penhora eletrônica - Poti"/>
        <transition to=" (VCiv) Encaminhar para novo fluxo de Execução Fiscal" name="19 - Encaminhar para novo fluxo de Execução Fiscal">
            <condition expression="#{(parametroUtil.getParametro('pje:tjrn:fluxo:ef:ojs:ids').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat('_'))) &amp;&amp; processoTrfHome.possuiClasse(23)}"/>
        </transition>
        <transition to="(VCiv) Conclusão para decisão de urgência inicial" name="07 - Enviar concluso para decisão de urgência inicial"/>
        <transition to="(VCiv) Conclusão para despacho inicial" name="15 - Enviar concluso para despacho inicial">
            <condition expression="#{!(parametroUtil.getParametro('pje:tjrn:OJsJuizados').contains('_'.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat('_')))}"/>
        </transition>
        <transition to="(VCiv) Dar cumprimento a ato judicial de penhora online" name="20 - Dar cumprimento a ato judicial de penhora online"/>
        <transition to="(VCiv) Citar com um clique" name="21 - Citar com um clique"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('minutaEmElaboracao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('condicaoLancamentoMovimentosTemporario')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('MovimentosLancadosTemporariamente')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('AgrupamentosLancadosTemporariamente')}"/>
        </event>
        <event type="task-start">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_aguardar_laudo_tecnico')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_aguardar_audiencia')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_apensar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_alterar_tipo_documento')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_bacenjud_minutar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_calcular_custas')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_certificar_decurso')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_certificar_transito')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_citar_intimar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_controlar_audiencia')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_controlar_retorno_expediente')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_alvara')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_alvaras')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_carta_precatoria')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_mandado')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_oficio')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_outros_documentos')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_infojud_infoseg_consultar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_publicar_dje')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_renajud_consultar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_retificar_autuacao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_suspender')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_aguardar_decurso_prazo')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_intimar_mp')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:redistribuir')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:arquivar')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:cancelar_distribuicao')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:encaminhar_instancia_superior')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_carta_rogatoria')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:cumpridec:controlar_retorno_expediente')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_precatorio')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_rpv')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_precatorio')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_rpv')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_encaminhar_cejusc')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:aguardar_central_calculos')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_encerrar_prazo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:encerrar_prazo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_registrar_serasajud')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:audienciaSelecionada')}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:aguardar_laudo_tecnico', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_aguardar_laudo_tecnico'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:aguardar_audiencia', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_aguardar_audiencia'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:apensar', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_apensar'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:alterar_tipo_documento', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_alterar_tipo_documento'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:calcular_custas', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_calcular_custas'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:certificar_decurso', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_certificar_decurso'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:certificar_transito', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_certificar_transito'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:citar_intimar', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_citar_intimar'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:controlar_audiencia', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_controlar_audiencia'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_alvara', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_alvara'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_alvaras', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_alvaras'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_carta_precatoria', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_carta_precatoria'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_mandado', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_mandado'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_oficio', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_oficio'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_outros_documentos', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_outros_documentos'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:infojud_infoseg_consultar', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_infojud_infoseg_consultar'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:publicar_dje', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_publicar_dje'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:renajud_consultar', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_renajud_consultar'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:retificar_autuacao', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_retificar_autuacao'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:suspender', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_suspender'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:aguardar_decurso_prazo', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_aguardar_decurso_prazo'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:intimar_mp', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_intimar_mp'))}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_carta_rogatoria', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_carta_rogatoria'))}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:controlar_retorno_expediente', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_controlar_retorno_expediente'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_precatorio', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_precatorio'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_rpv', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_rpv'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:encaminar_cejusc',tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_encaminhar_cejusc'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:encerrar_prazo',tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_encerrar_prazo'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:registrar_serasajud', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_registrar_serasajud'))}"/>
        </event>
    </task-node>
    <node name=" (VCiv) Encaminhar para novo fluxo de Execução Fiscal">
        <transition to="Término" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento"/>
        <event type="node-enter">
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavel('ef:fbg:fbc', true)}"/>
            <action name="upd" expression="#{processoJudicialService.incluirNovoFluxo(tramitacaoProcessualService.recuperaProcesso(), 'EF_FBG', processInstance.contextInstance.variables)}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(VCiv) Despachados urgentes">
        <task name="(VCiv) Despachados urgentes" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir despacho"/>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <transition to="(VCiv) Intimações eletrônicas" name="Intimar advogados (automaticamente)"/>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:intelet:cancelou')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:saida_intelet_cancelado')}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Despachados urgentes')}"/>
        </event>
    </task-node>
    <process-state name="(VCiv) Conclusão para decisão de urgência">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao_urgencia')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados urgentes')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao_urgencia', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Conclusão para sentença de homologação e(ou) extinção">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <description><![CDATA[]]></description>
        <transition to="(VCIv) Tem sentença extinção ?" name="(VCIv) Tem sentença extinção ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:sentenca')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:sentenca_homologacao_extincao')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados sobre homologação e(ou) extinção')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:sentenca', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:sentenca_homologacao_extincao', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Conclusão para decisão sobre recurso">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao_recurso')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao_recurso', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Conclusão para decisão de Emb. de Declaração">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao_embargos_declaracao')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao_embargos_declaracao', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Conclusão para decisão">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao_generica')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao_generica', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Conclusão para despacho">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:despacho')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:despacho_generico')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:despacho', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:despacho_generico', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Conclusão para sentença">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:sentenca')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:sentenca_generica')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:sentenca', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:sentenca_generica', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Dar cumprimento a ato judicial">
        <sub-process name="(VCiv) Cumprimento de decisão" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
    </process-state>
    <process-state name="(VCiv) Conclusão para despacho de cumprimento de sentença">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:despacho')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:despacho_cumprimento_sentenca')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:despacho', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:despacho_cumprimento_sentenca', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Redistribuição de processo">
        <sub-process name="(VCiv) Cumprimento de decisão" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:redistribuir')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:redistribuir', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:RedistribuidoDoFluxo-VCiv', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Arquivamento de processo">
        <sub-process name="(VCiv) Cumprimento de decisão" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:arquivar')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:arquivar', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Cancelamento de distribuição">
        <sub-process name="(VCiv) Cumprimento de decisão" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:cancelar_distribuicao')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:cancelar_distribuicao', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Encaminhamento para instância superior">
        <sub-process name="(VCiv) Cumprimento de decisão" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:encaminhar_instancia_superior')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:encaminhar_instancia_superior', 'true')}"/>
        </event>
    </process-state>
    <decision expression="#{competenciaClasseAssuntoHome.processoContemClasseAssunto('1118') ? '(VCiv) Análise inicial da secretaria' : '(VCiv) É competência de juizado especial cível?'}" name="(VCiv) É Emb. Execução Fiscal?">
        <transition to="(VCiv) Análise inicial da secretaria" name="(VCiv) Análise inicial da secretaria"/>
        <transition to="(VCiv) É competência de juizado especial cível?" name="(VCiv) É competência de juizado especial cível?"/>
    </decision>
    <task-node end-tasks="true" name="(VCiv) Análise inicial da secretaria">
        <task name="(VCiv) Análise inicial da secretaria" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Conclusão para despacho inicial" name="Enviar concluso para despacho inicial"/>
    </task-node>
    <decision expression="#{competenciaClasseAssuntoHome.processoContemClasseAssunto('1118') ? '(VCiv) Análise inicial da secretaria - urgente' : '(VCiv) Conclusão para decisão de urgência inicial'}" name="(VCiv) É Emb. Execução Fiscal - urgente?">
        <transition to="(VCiv) Conclusão para decisão de urgência inicial" name="(VCiv) Conclusão para decisão de urgência inicial"/>
        <transition to="(VCiv) Análise inicial da secretaria - urgente" name="(VCiv) Análise inicial da secretaria - urgente"/>
    </decision>
    <task-node end-tasks="true" name="(VCiv) Análise inicial da secretaria - urgente">
        <task name="(VCiv) Análise inicial da secretaria - urgente" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Conclusão para decisão de urgência inicial" name="Enviar concluso para decisão de urgência inicial"/>
    </task-node>
    <process-state name="Encaminhar para outro fluxo (JESP)">
        <sub-process name="Fluxo básico de conhecimento" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:EhDeOutroFluxo', 'true')}"/>
        </event>
    </process-state>
    <decision expression="#{util.eval(parametroUtil.getParametro('pje:tjrn:vciv:DefinicaoJuizadoCivel')) ?  '(VCiv) Controlar audiência?' : '(VCiv) Processo com documentação insuficiente?'}" name="(VCiv) É competência de juizado especial cível?">
        <description><![CDATA[parametro: pje:tjrn:vciv:DefinicaoJuizadoCivel : (
        tramitacaoProcessualService.recuperaProcesso().competencia.idCompetencia == 3 
                && 
        competenciaClasseAssuntoHome.processoContemClasseAssunto('159;156')
) 

||

(
        tramitacaoProcessualService.recuperaProcesso().competencia.idCompetencia == 25 
                        && 
        competenciaClasseAssuntoHome.processoContemClasseAssunto('159;156')
) 

|| 

(
        tramitacaoProcessualService.recuperaProcesso().competencia.idCompetencia != 3
                &&
        tramitacaoProcessualService.recuperaProcesso().competencia.idCompetencia != 25
)]]></description>
        <transition to="(VCiv) Controlar audiência?" name="(VCiv) Controlar audiência?"/>
        <transition to="(VCiv) Processo com documentação insuficiente?" name="(VCiv) Processo com documentação insuficiente?"/>
    </decision>
    <task-node end-tasks="true" name="(VCiv) Escolher providência inicial">
        <task name="(VCiv) Escolher providência inicial" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Análise da secretaria" name="Encaminhar para análise da secretaria"/>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
    </task-node>
    <process-state name="(VCiv) Conclusão para decisão de penhora online">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao_penhora_online')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Dar cumprimento a ato judicial de penhora online')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao_penhora_online', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Dar cumprimento a ato judicial de penhora online">
        <sub-process name="Integraçao PJe x Sisbajud" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
    </process-state>
    <task-node end-tasks="true" name="(VCiv) Despachados sobre homologação e(ou) extinção">
        <task name="(VCiv) Despachados sobre homologação e(ou) extinção" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir despacho"/>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <transition to="(VCiv) Intimações eletrônicas" name="Intimar advogados (automaticamente)"/>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:intelet:cancelou')}"/>
            <action/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Despachados sobre homologação e(ou) extinção')}"/>
        </event>
    </task-node>
    <process-state name="(VCiv) Conclusão para decisão sobre desbloqueio">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao_desbloqueio')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados sobre desbloqueio')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao_desbloqueio', 'true')}"/>
        </event>
    </process-state>
    <process-state name="(VCiv) Conclusão para decisão sobre suspensão">
        <sub-process name="(VCiv) Preparar Ato Judicial" binding="late"/>
        <transition to="(VCIv) Tem sentença ?" name="(VCIv) Tem sentença ?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fbc:decisao_suspensao')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_nao_sentenciado', '(VCiv) Despachados sobre suspensão')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao', 'true')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fbc:decisao_suspensao', 'true')}"/>
        </event>
    </process-state>
    <task-node end-tasks="true" name="(VCiv) Despachados sobre desbloqueio">
        <task name="(VCiv) Despachados sobre desbloqueio" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir despacho"/>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <transition to="(VCiv) Intimações eletrônicas" name="Intimar advogados (automaticamente)"/>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:intelet:cancelou')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:saida_intelet_cancelado')}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Despachados sobre desbloqueio')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(VCiv) Despachados sobre suspensão">
        <task name="(VCiv) Despachados sobre suspensão" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir despacho"/>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <transition to="(VCiv) Intimações eletrônicas" name="Intimar advogados (automaticamente)"/>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:intelet:cancelou')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:saida_intelet_cancelado')}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Despachados sobre suspensão')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(VCIv) Sentenciados">
        <task name="(VCIv) Sentenciados" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir sentença"/>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:intelet:cancelou')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:saida_intelet_cancelado')}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Sentenciados')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(VCiv) Sentenciados">
        <task name="(VCiv) Sentenciados" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir sentença"/>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <transition to="(VCiv) Intimações eletrônicas" name="Intimar advogados (automaticamente)"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Sentenciados')}"/>
        </event>
    </task-node>
    <decision expression="#{documentoJudicialService.getDocumento(tramitacaoProcessualService.recuperaVariavel('pje:atoProferido')).getTipoProcessoDocumento().idTipoProcessoDocumento == 62 ? '(VCiv) Sentenciados' : '(VCiv) Emissão de certidão sem efeito?'}" name="(VCIv) Tem sentença ?">
        <transition to="(VCiv) Emissão de certidão sem efeito?" name="(VCiv) Emissão de certidão sem efeito?"/>
        <transition to="(VCiv) Sentenciados" name="(VCiv) Sentenciados"/>
    </decision>
    <process-state name="(VCiv) Citar e(ou) intimar">
        <sub-process name="(VCiv) Preparar Ato de Comunicação" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:citar_intimar', true)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:publicar_dje', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:expedir_mandado', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:expedir_carta_precatoria', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:intimar_mp', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:expedir_carta_rogatoria', false)}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:citar_intimar_reativacao', false)}"/>
        </event>
    </process-state>
    <task-node end-tasks="true" name="Processos recebidos do fluxo antigo">
        <task name="Processos recebidos do fluxo antigo" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="vciv_fbc_aguardar_laudo_tecnico" mapped-name="sim_nao:vciv_fbc_aguardar_laudo_tecnico" access="read,write"/>
                <variable name="vciv_fbc_aguardar_decurso_prazo" mapped-name="sim_nao:vciv_fbc_aguardar_decurso_prazo" access="read,write"/>
                <variable name="vciv_fbc_apensar" mapped-name="sim_nao:vciv_fbc_apensar" access="read,write"/>
                <variable name="vciv_fbc_calcular_custas" mapped-name="sim_nao:vciv_fbc_calcular_custas" access="read,write"/>
                <variable name="vciv_fbc_certificar_decurso" mapped-name="sim_nao:vciv_fbc_certificar_decurso" access="read,write"/>
                <variable name="vciv_fbc_certificar_transito" mapped-name="sim_nao:vciv_fbc_certificar_transito" access="read,write"/>
                <variable name="vciv_fbc_citar_intimar" mapped-name="sim_nao:vciv_fbc_citar_intimar" access="read,write"/>
                <variable name="vciv_fbc_controlar_audiencia" mapped-name="sim_nao:vciv_fbc_controlar_audiencia" access="read,write"/>
                <variable name="vciv_fbc_controlar_retorno_expediente" mapped-name="sim_nao:vciv_fbc_controlar_retorno_expediente" access="read,write"/>
                <variable name="vciv_fbc_expedir_alvaras" mapped-name="sim_nao:vciv_fbc_expedir_alvaras" access="read,write"/>
                <variable name="vciv_fbc_expedir_carta_precatoria" mapped-name="sim_nao:vciv_fbc_expedir_carta_precatoria" access="read,write"/>
                <variable name="vciv_fbc_expedir_carta_rogatoria" mapped-name="sim_nao:vciv_fbc_expedir_carta_rogatoria" access="read,write"/>
                <variable name="vciv_fbc_expedir_mandado" mapped-name="sim_nao:vciv_fbc_expedir_mandado" access="read,write"/>
                <variable name="vciv_fbc_expedir_oficio" mapped-name="sim_nao:vciv_fbc_expedir_oficio" access="read,write"/>
                <variable name="vciv_fbc_expedir_outros_documentos" mapped-name="sim_nao:vciv_fbc_expedir_outros_documentos" access="read,write"/>
                <variable name="vciv_fbc_infojud_infoseg_consultar" mapped-name="sim_nao:vciv_fbc_infojud_infoseg_consultar" access="read,write"/>
                <variable name="vciv_fbc_intimar_mp" mapped-name="sim_nao:vciv_fbc_intimar_mp" access="read,write"/>
                <variable name="vciv_fbc_publicar_dje" mapped-name="sim_nao:vciv_fbc_publicar_dje" access="read,write"/>
                <variable name="vciv_fbc_renajud_consultar" mapped-name="sim_nao:vciv_fbc_renajud_consultar" access="read,write"/>
                <variable name="vciv_fbc_retificar_autuacao" mapped-name="sim_nao:vciv_fbc_retificar_autuacao" access="read,write"/>
                <variable name="vciv_fbc_suspender" mapped-name="sim_nao:vciv_fbc_suspender" access="read,write"/>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Dar cumprimento a ato judicial" name="01 - Prosseguir na(s) tarefa(s) selecionada(s)"/>
        <transition to="(VCiv) Redistribuição de processo" name="02 - Redistribuir processo"/>
        <transition to="(VCiv) Arquivamento de processo" name="03 - Arquivar processo"/>
        <transition to="(VCiv) Cancelamento de distribuição" name="04 - Cancelar distribuição"/>
        <transition to="(VCiv) Encaminhamento para instância superior" name="05 - Encaminhar para instância superior"/>
        <transition to="(VCiv) Conclusão para decisão" name="06 - Enviar concluso para decisão"/>
        <transition to="(VCiv) Conclusão para decisão de urgência" name="07 - Enviar concluso para decisão de urgência"/>
        <transition to="(VCiv) Conclusão para decisão de Emb. de Declaração" name="08 - Enviar concluso para decisão de Emb. de Declaração"/>
        <transition to="(VCiv) Conclusão para decisão sobre recurso" name="09 - Enviar concluso para decisão sobre recurso"/>
        <transition to="(VCiv) Conclusão para decisão de penhora online" name="10 - Enviar concluso para decisão de penhora online"/>
        <transition to="(VCiv) Conclusão para decisão sobre desbloqueio" name="11 - Enviar concluso para decisão de desbloqueio"/>
        <transition to="(VCiv) Conclusão para decisão sobre suspensão" name="12 - Enviar concluso para decisão de suspensão"/>
        <transition to="(VCiv) Conclusão para despacho" name="13 - Enviar concluso para despacho"/>
        <transition to="(VCiv) Conclusão para despacho de cumprimento de sentença" name="14 - Enviar concluso para despacho de cumprimento de sentença"/>
        <transition to="(VCiv) Conclusão para sentença" name="15 - Enviar concluso para sentença"/>
        <transition to="(VCiv) Conclusão para sentença de homologação e(ou) extinção" name="16 - Enviar concluso para sentença de homologação e/ou extinção"/>
        <transition to="(VCiv) Análise da secretaria" name="17 - Enviar para análise da secretaria"/>
        <transition to="(VCiv) Dar cumprimento a ato judicial de central de calculos" name="18 - Enviar para central de calculos">
            <condition expression="#{' 38 39 102 '.contains(' '.concat(tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador).concat(' '))}"/>
        </transition>
        <event type="task-start">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_aguardar_laudo_tecnico')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_aguardar_audiencia')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_apensar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_bacenjud_minutar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_calcular_custas')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_certificar_decurso')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_certificar_transito')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_citar_intimar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_controlar_audiencia')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_alvara')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_alvaras')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_carta_precatoria')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_mandado')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_oficio')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_outros_documentos')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_infojud_infoseg_consultar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_publicar_dje')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_renajud_consultar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_retificar_autuacao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_suspender')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_aguardar_decurso_prazo')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_intimar_mp')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:redistribuir')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:arquivar')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:cancelar_distribuicao')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:encaminhar_instancia_superior')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_expedir_carta_rogatoria')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavelTarefa('sim_nao:vciv_fbc_controlar_retorno_expediente')}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:aguardar_laudo_tecnico', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_aguardar_laudo_tecnico'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:aguardar_audiencia', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_aguardar_audiencia'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:apensar', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_apensar'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:calcular_custas', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_calcular_custas'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:certificar_decurso', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_certificar_decurso'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:certificar_transito', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_certificar_transito'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:citar_intimar', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_citar_intimar'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:controlar_audiencia', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_controlar_audiencia'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_alvara', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_alvara'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_alvaras', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_alvaras'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_carta_precatoria', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_carta_precatoria'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_mandado', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_mandado'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_oficio', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_oficio'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_outros_documentos', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_outros_documentos'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:infojud_infoseg_consultar', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_infojud_infoseg_consultar'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:publicar_dje', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_publicar_dje'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:renajud_consultar', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_renajud_consultar'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:retificar_autuacao', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_retificar_autuacao'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:suspender', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_suspender'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:aguardar_decurso_prazo', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_aguardar_decurso_prazo'))}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:intimar_mp', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_intimar_mp'))}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:expedir_carta_rogatoria', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_expedir_carta_rogatoria'))}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cumpridec:controlar_retorno_expediente', tramitacaoProcessualService.recuperaVariavelTarefa('sim_nao:vciv_fbc_controlar_retorno_expediente'))}"/>
        </event>
    </task-node>
    <process-state name="(VCiv) Dar cumprimento a ato judicial de central de calculos">
        <sub-process name="(VCiv) Cumprimento de decisão" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:aguardar_central_calculos')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:aguardar_central_calculos', true)}"/>
        </event>
    </process-state>
    <task-node end-tasks="true" name="(VCIv) Sentenciados sobre homologação e extinção">
        <task name="(VCIv) Sentenciados sobre homologação e extinção" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir sentença"/>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <transition to="(VCiv) Intimações eletrônicas" name="Intimar advogados (automaticamente)"/>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:intelet:cancelou')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:saida_intelet_cancelado')}"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Sentenciados sobre homologação e extinção')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(VCiv) Sentenciados sobre homologação e extinção">
        <task name="(VCiv) Sentenciados sobre homologação e extinção" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_visualizarDecisao" mapped-name="frame:Processo_Fluxo_visualizarDecisao" access="read,write"/>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Análise da secretaria" name="Cumprir sentença"/>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <transition to="(VCiv) Intimações eletrônicas" name="Intimar advogados (automaticamente)"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:fbc:saida_intelet_cancelado','(VCiv) Sentenciados sobre homologação e extinção')}"/>
        </event>
    </task-node>
    <decision expression="#{documentoJudicialService.getDocumento(tramitacaoProcessualService.recuperaVariavel('pje:atoProferido')).getTipoProcessoDocumento().idTipoProcessoDocumento == 62 ? '(VCiv) Sentenciados sobre homologação e extinção' : '(VCiv) Emissão de certidão sem efeito?'}" name="(VCIv) Tem sentença extinção ?">
        <transition to="(VCiv) Emissão de certidão sem efeito?" name="(VCiv) Emissão de certidão sem efeito?"/>
        <transition to="(VCiv) Sentenciados sobre homologação e extinção" name="(VCiv) Sentenciados sobre homologação e extinção"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaProcesso().orgaoJulgador.idOrgaoJulgador == 315 ? '(VCiv) Controlar audiência' : '(VCiv) Conclusão para despacho inicial'}" name="(VCiv) Controlar audiência?">
        <transition to="(VCiv) Conclusão para despacho inicial" name="(VCiv) Conclusão para despacho inicial"/>
        <transition to="(VCiv) Controlar audiência" name="(VCiv) Controlar audiência"/>
    </decision>
    <process-state name="(VCiv) Controlar audiência">
        <sub-process name="(VCiv) Controle de Audiência" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
    </process-state>
    <process-state name="(VCiv) Intimações eletrônicas">
        <sub-process name="(VCiv) Intimações eletrônicas" binding="late"/>
        <transition to="(VCiv) Cancelou intelet ?" name="(VCiv) Cancelou intelet ?"/>
    </process-state>
    <decision expression="${tramitacaoProcessualService.recuperaVariavel('vciv:intelet:cancelou') ? (tramitacaoProcessualService.recuperaVariavel('vciv:fbc:saida_intelet_cancelado') != null ? tramitacaoProcessualService.recuperaVariavel('vciv:fbc:saida_intelet_cancelado') : '(VCiv) Análise da secretaria') : '(VCiv) Análise da secretaria'}" name="(VCiv) Cancelou intelet ?">
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <transition to="(VCiv) Despachados sobre homologação e(ou) extinção" name="(VCiv) Despachados sobre homologação e(ou) extinção"/>
        <transition to="(VCiv) Despachados sobre desbloqueio" name="(VCiv) Despachados sobre desbloqueio"/>
        <transition to="(VCiv) Sentenciados sobre homologação e extinção" name="(VCiv) Sentenciados sobre homologação e extinção"/>
        <transition to="(VCiv) Sentenciados" name="(VCiv) Sentenciados"/>
        <transition to="(VCiv) Despachados" name="(VCiv) Despachados"/>
        <transition to="(VCiv) Despachados urgentes" name="(VCiv) Despachados urgentes"/>
        <transition to="(VCiv) Despachados sobre suspensão" name="(VCiv) Despachados sobre suspensão"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('vciv:fbc:redistribuir') ? '(VCiv) Análise da secretaria' : '(VCiv) Encaminhar para Análise da secretaria?'}" name="(VCiv) Redistribuido ?">
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <transition to="(VCiv) Encaminhar para Análise da secretaria?" name="(VCiv) Encaminhar para Análise da secretaria?"/>
    </decision>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('vciv:encaminhar_analise_secretaria') ? '(VCiv) Análise da secretaria' : '(VCiv) Vem de outro fluxo?'}" name="(VCiv) Encaminhar para Análise da secretaria?">
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <transition to="(VCiv) Vem de outro fluxo?" name="(VCiv) Vem de outro fluxo?"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:encaminhar_analise_secretaria')}"/>
        </event>
    </decision>
    <node name="(VCiv) Limpar ações para redistribuir">
        <transition to="(VCiv) Redistribuição de processo" name="(VCiv) Redistribuição de processo"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:aguardar_laudo_tecnico')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:aguardar_audiencia')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:apensar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:bacenjud_minutar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:calcular_custas')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:certificar_decurso')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:certificar_transito')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:citar_intimar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:controlar_audiencia')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_alvara')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_alvaras')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_carta_precatoria')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_mandado')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_oficio')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_outros_documentos')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:infojud_infoseg_consultar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:publicar_dje')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:renajud_consultar')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:retificar_autuacao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:suspender')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:aguardar_decurso_prazo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:intimar_mp')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_carta_rogatoria')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:cumpridec:controlar_retorno_expediente')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_precatorio')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:expedir_rpv')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:encaminar_cejusc')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:fbc:encerrar_prazo')}"/>
        </event>
    </node>
    <process-state name="(VCiv) Encaminhar para o Gabinete VEF">
        <sub-process name="(VEF) Autos recebidos da secretaria - Execução Fiscal" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:vef:decisao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:vef:despacho')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:vef:sentenca')}"/>
        </event>
    </process-state>
    <node name="(VCiv) Encaminhar gabinete - despacho">
        <transition to="(VCiv) Encaminhar para o Gabinete VEF" name="(VCiv) Encaminhar para o Gabinete VEF"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:vef:despacho', 'true')}"/>
        </event>
    </node>
    <node name="(VCiv) Encaminhar gabinete - decisão">
        <transition to="(VCiv) Encaminhar para o Gabinete VEF" name="(VCiv) Encaminhar para o Gabinete VEF"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:vef:decisao', 'true')}"/>
        </event>
    </node>
    <node name="(VCiv) Encaminhar gabinete - sentença">
        <transition to="(VCiv) Encaminhar para o Gabinete VEF" name="(VCiv) Encaminhar para o Gabinete VEF"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:vef:sentenca', 'true')}"/>
        </event>
    </node>
    <decision expression="#{(entityManager.createNativeQuery(parametroUtil.getParametro('paj:query_parte_sem_doc')).setParameter(&quot;idProcesso&quot;, tramitacaoProcessualService.recuperaProcesso().getIdProcessoTrf()).getSingleResult() == 1 ? '(VCiv) Escolher providência inicial - Documentação insuficiente' : '(VCiv) Escolher providência inicial')}" name="(VCiv) Processo com documentação insuficiente?">
        <transition to="(VCiv) Escolher providência inicial - Documentação insuficiente" name="(VCiv) Escolher providência inicial - Documentação insuficiente"/>
        <transition to="(VCiv) Escolher providência inicial" name="(VCiv) Escolher providência inicial"/>
    </decision>
    <task-node end-tasks="true" name="(VCiv) Escolher providência inicial - Documentação insuficiente">
        <task name="(VCiv) Escolher providência inicial - Documentação insuficiente" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="MovimentarEmLote" mapped-name="movimentarLote:MovimentarEmLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Nó de Desvio - (VCiv) Fluxo básico de conhecimento" name="Nó de Desvio - (VCiv) Fluxo básico de conhecimento">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Análise da secretaria" name="Encaminhar para análise da secretaria"/>
        <transition to="(VCiv) Citar e(ou) intimar" name="Citar e(ou) intimar"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:paj:docinsuficanalisada', true)}"/>
        </event>
    </task-node>
    <process-state name="(VCiv) Penhora eletrônica - Poti">
        <sub-process name="(VCiv) Poti" binding="late"/>
        <transition to="(VCiv) Análise da secretaria" name="(VCiv) Análise da secretaria"/>
    </process-state>
    <node name="(VCiv) Citar com um clique">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoJudicialService.incluirNovoFluxo(tramitacaoProcessualService.recuperaProcesso(), 'VCiv_CIT')}"/>
        </event>
    </node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>