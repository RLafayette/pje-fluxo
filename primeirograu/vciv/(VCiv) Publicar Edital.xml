<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(VCiv) Publicar Edital">
    <description><![CDATA[Teste!.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Magistrado">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:5483,6:1469,8:5852,8:5853,6:5901')}" actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (VCiv) Publicar Edital">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:5483,6:1469,8:5852,8:5853')}" actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" priority="3"/>
        <transition to="(VCiv) Preparar edital" name="(VCiv) Preparar edital"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="(VCiv) Preparar edital">
        <task name="(VCiv) Preparar edital" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_expedientes_diario" mapped-name="frame:Processo_Fluxo_expedientes_diario" access="read,write"/>
            </controller>
        </task>
        <transition to="Término" name="Ignorar preparação de edital"/>
        <transition to="(VCiv) Possui meio Edital?" name="(VCiv) Possui meio Edital?">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-start">
            <action name="upd" expression="#{preparaAtoComunicacaoAction.setMeiosComunicacao('P,D')}"/>
            <action expression="#{taskInstanceUtil.setVariable('tiposDisponiveisIds','60,69,65')}"/>
        </event>
        <event type="task-create">
            <action name="upd" expression="#{taskInstanceUtil.setFrameDefaultTransition('(VCiv) Possui meio Edital?')}"/>
        </event>
    </task-node>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesEdital().size() &gt; 0 ? '(VCiv) Publicar edital no DJEN' : 'Término'}" name="(VCiv) Possui meio Edital?">
        <transition to="(VCiv) Publicar edital no DJEN" name="(VCiv) Publicar edital no DJEN"/>
        <transition to="Término" name="Término"/>
    </decision>
    <node name="(VCiv) Publicar edital no DJEN">
        <transition to="(VCiv) Processos com prazo em curso - DJEN" name="(VCiv) Processos com prazo em curso - DJEN"/>
        <event type="node-enter">
            <action expression="#{publicadorPCP.publicar(comunicacaoProcessualAction.getExpedientesEdital())}"/>
            <action expression="#{entityManager.createQuery(&quot;update ProcessoParteExpediente ppe set ppe.fechado = false, ppe.cienciaSistema = true, ppe.dtCienciaParte = current_timestamp() where ppe in (select ppe from ProcessoExpediente pe JOIN pe.processoParteExpedienteList ppe WHERE pe in (:editais))&quot;).setParameter(&quot;editais&quot;, comunicacaoProcessualAction.getExpedientesEdital()).executeUpdate()}"/>
            <action expression="#{preencherMovimento.deCodigo(60).comComplementoDeCodigo(4).doTipoDominio().preencherComElementoDeCodigo(80).lancarMovimento()}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(VCiv) Processos com prazo em curso - DJEN">
        <task name="(VCiv) Processos com prazo em curso - DJEN" swimlane="Secretaria" priority="3"/>
        <transition to="Nó de Desvio - (VCiv) Publicar Edital" name="Nó de Desvio - (VCiv) Publicar Edital">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Término" name="Prosseguir"/>
        <transition to="Nó de Desvio - (VCiv) Publicar Edital" name="Nó de Desvio - (VCiv) Publicar Edital">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - (VCiv) Publicar Edital">
        <task name="Nó de Desvio - (VCiv) Publicar Edital" swimlane="Nó de Desvio - (VCiv) Publicar Edital" priority="3"/>
        <transition to="Término" name="Término"/>
        <transition to="(VCiv) Preparar edital" name="(VCiv) Preparar edital"/>
        <transition to="(VCiv) Processos com prazo em curso - DJEN" name="(VCiv) Processos com prazo em curso - DJEN"/>
        <transition to="Nó de Desvio - (VCiv) Publicar Edital" name="Nó de Desvio - (VCiv) Publicar Edital">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <task-node end-tasks="true" name="Nó de Desvio - (VCiv) Publicar Edital">
        <task name="Nó de Desvio - (VCiv) Publicar Edital" swimlane="Nó de Desvio - (VCiv) Publicar Edital" priority="3"/>
        <transition to="(VCiv) Preparar edital" name="(VCiv) Preparar edital"/>
        <transition to="(VCiv) Processos com prazo em curso - DJEN" name="(VCiv) Processos com prazo em curso - DJEN"/>
        <transition to="Término" name="Término"/>
        <transition to="Nó de Desvio - (VCiv) Publicar Edital" name="Nó de Desvio - (VCiv) Publicar Edital"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
