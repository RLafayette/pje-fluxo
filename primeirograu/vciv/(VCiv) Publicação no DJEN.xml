<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(VCiv) Publicação no DJEN">
    <description><![CDATA[Código do fluxo: VCiv_PUB_DJEN
    Descrição: Fluxo destinado a publicação de expedientes no diário da justiça eletrônico.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Magistrado">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:5483,6:1469,8:5852,8:5853,6:5901')}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (VCiv) Publicação no DJEN">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:1469')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,5:5483,6:1469,8:5852,8:5853')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" priority="3"/>
        <transition to="(VCiv) Separação em Diário ou Eletrônico" name="(VCiv) Separação em Diário ou Eletrônico"/>
    </start-state>  
    <!-- NODES -->
    <fork name="(VCiv) Separação em Diário ou Eletrônico">
        <transition to="(VCiv) Possui meio Eletrônico?" name="(VCiv) Possui meio Eletrônico?"/>
        <transition to="(VCiv) Possui meio Edital ou Diário?" name="(VCiv) Possui meio Edital ou Diário?"/>
    </fork>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesEletronico().size() &gt; 0 ? '(VCiv) Publicar documentos no DJEN' : '(VCiv) Junção em Diário ou Eletrônico'}" name="(VCiv) Possui meio Eletrônico?">
        <transition to="(VCiv) Publicar documentos no DJEN" name="(VCiv) Publicar documentos no DJEN"/>
        <transition to="(VCiv) Junção em Diário ou Eletrônico" name="(VCiv) Junção em Diário ou Eletrônico"/>
    </decision>
    <task-node end-tasks="true" name="(VCiv) Publicar documentos no DJEN">
        <task name="(VCiv) Publicar documentos no DJEN" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Processo_Fluxo_expedientes_diario" mapped-name="frame:Processo_Fluxo_expedientes_diario" access="read,write"/>
            </controller>
        </task>
        <transition to="(VCiv) Disponibilizar expedientes no DJEN" name="Enviar expedientes ao DJEN"/>
        <transition to="(VCiv) Ignorar disponibilização no DJEN" name="Ignorar envio de documentos para o DJEN"/>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="(VCiv) Ignorar disponibilização no DJEN">
        <task name="(VCiv) Ignorar disponibilização no DJEN" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Aviso_DJEN" mapped-name="textAlert:Aviso_DJEN" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[Variáveis:

Nome: Aviso_DJEN
Label: Deseja realmente ignorar a disponibilização no DJEN?
Escrita: Sim
Obrig.: Não
Tipo: Aviso]]></description>
        <transition to="(VCiv) Separação em Diário ou Eletrônico" name="Não"/>
        <transition to="(VCiv) Junção em Diário ou Eletrônico" name="Sim"/>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
    </task-node>
    <decision expression="#{comunicacaoProcessualAction.getExpedientesEdital().size() &gt; 0 || comunicacaoProcessualAction.getExpedientesDiario().size() &gt; 0 ? '(VCiv) Disponibilizar expedientes no DJEN' : '(VCiv) Junção em Diário ou Eletrônico'}" name="(VCiv) Possui meio Edital ou Diário?">
        <transition to="(VCiv) Disponibilizar expedientes no DJEN" name="(VCiv) Disponibilizar expedientes no DJEN"/>
        <transition to="(VCiv) Junção em Diário ou Eletrônico" name="(VCiv) Junção em Diário ou Eletrônico"/>
    </decision>
    <node name="(VCiv) Disponibilizar expedientes no DJEN">
        <transition to="(VCiv) Disponibilizou no DJEN?" name="(VCiv) Disponibilizou no DJEN?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:tjrn:qntEnviadosDjen', comunicacaoProcessualAction.enviarExpedientesDJE())}"/>
        </event>
    </node>
    <decision expression="#{util.eval(parametroUtil.getParametro('pje:tjrn:DefinicaoEnviouDJEN')) ? '(VCiv) Aguardando publicação no DJEN' : '(VCiv) Ignorar disponibilização no DJEN'}" name="(VCiv) Disponibilizou no DJEN?">
        <transition to="(VCiv) Aguardando publicação no DJEN" name="(VCiv) Aguardando publicação no DJEN"/>
        <transition to="(VCiv) Ignorar disponibilização no DJEN" name="(VCiv) Ignorar disponibilização no DJEN"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:tjrn:qntEnviadosDjen')}"/>
        </event>
    </decision>
    <task-node end-tasks="true" name="(VCiv) Aguardando publicação no DJEN">
        <task name="(VCiv) Aguardando publicação no DJEN" swimlane="Secretaria" priority="3"/>
        <transition to="(VCiv) CPRE" name="Prosseguir">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Junção em Diário ou Eletrônico" name="Sair da tarefa"/>    
        <transition to="(VCiv) Confirmar cancelamento de disponibilização no DJEN" name="Cancelar envio de documento para o DJEN"/>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:aguardaPublicacaoDJE')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('frameDefaultLeavingTransition')}"/>
        </event>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:aguardaPublicacaoDJE', true)}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('frameDefaultLeavingTransition', 'Prosseguir')}"/>
        </event>
    </task-node>
    <node name="(VCiv) CPRE">
        <transition to="(VCiv) Junção em Diário ou Eletrônico" name="(VCiv) Junção em Diário ou Eletrônico"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:pubdjen:voltar_fbc')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cpre:sistema', true)}"/>
            <action expression="#{processoJudicialService.incluirNovoFluxo(tramitacaoProcessualService.recuperaProcesso(), 'VCiv_CPRE', processInstance.contextInstance.variables)}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="(VCiv) Confirmar cancelamento de disponibilização no DJEN">
        <task name="(VCiv) Confirmar cancelamento de disponibilização no DJEN" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Aviso_DJEN_cancelamento" mapped-name="textAlert:Aviso_DJEN_cancelamento" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[Variáveis:

Nome: Aviso_DJEN_cancelamento
Label: Deseja realmente cancelar a disponibilização no DJEN?
Escrita: Sim
Obrig.: Não
Tipo: Aviso]]></description>
        <transition to="(VCiv) Cancelar disponibilização de expediente no DJEN" name="Sim"/>
        <transition to="(VCiv) Aguardando publicação no DJEN" name="Não"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
    </task-node>
    <node name="(VCiv) Cancelar disponibilização de expediente no DJEN">
        <transition to="(VCiv) Cancelou disponibilização de expedientes no DJEN?" name="(VCiv) Cancelou disponibilização de expedientes no DJEN?"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:djen:publicacaoCanceladaSucesso', comunicacaoProcessualAction.cancelarPublicacaoDiarioExpedientesAtuais())}"/>
        </event>
    </node>
    <decision expression="#{tramitacaoProcessualService.recuperaVariavel('pje:fluxo:djen:publicacaoCanceladaSucesso').equals(true) ? '(VCiv) Junção em Diário ou Eletrônico' : '(VCiv) Erro ao cancelar disponibilização no DJEN'}" name="(VCiv) Cancelou disponibilização de expedientes no DJEN?">
        <transition to="(VCiv) Junção em Diário ou Eletrônico" name="(VCiv) Junção em Diário ou Eletrônico"/>
        <transition to="(VCiv) Erro ao cancelar disponibilização no DJEN" name="(VCiv) Erro ao cancelar disponibilização no DJEN"/>
    </decision>
    <task-node end-tasks="true" name="(VCiv) Erro ao cancelar disponibilização no DJEN">
        <task name="(VCiv) Erro ao cancelar disponibilização no DJEN" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="Aviso_ERRO_DJEN" mapped-name="textAlert:Aviso_ERRO_DJEN" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[Variáveis:

Nome: Aviso_ERRO_DJEN
Label: Ocorreu um erro ao tentar cancelar o envio. #{tramitacaoProcessualService.recuperaVariavel('pje:fluxo:djen:recibosPublicacoesNaoCanceladas')} Deseja tentar novamente?
Escrita: Sim
Obrig.: Não
Tipo: Aviso]]></description>
        <transition to="(VCiv) Confirmar cancelamento de disponibilização no DJEN" name="Sim"/>
        <transition to="(VCiv) Aguardando publicação no DJEN" name="Não"/>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('mostrarBotaoGravarNoFluxo', false)}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:djen:publicacaoCanceladaSucesso')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:djen:recibosPublicacoesNaoCanceladas')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('mostrarBotaoGravarNoFluxo')}"/>
        </event>
    </task-node>
    <join name="(VCiv) Junção em Diário ou Eletrônico">
        <transition to="(VCiv) Voltar para análise de secretaria?" name="(VCiv) Voltar para análise de secretaria?"/>
    </join>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('vciv:pubdjen:voltar_fbc') ? 'Sim' : 'Não'}" name="(VCiv) Voltar para análise de secretaria?">
        <transition to="(VCiv) Voltar para análise de secretaria" name="Sim"/>
        <transition to="Término" name="Não"/>
    </decision>
    <node name="(VCiv) Voltar para análise de secretaria">
        <transition to="Término" name="Término"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:pubdjen:voltar_fbc')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:cpre:voltar_fbc')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:djen:publicacaoCanceladaSucesso')}"/>
            <action expression="#{processoJudicialService.incluirNovoFluxo(tramitacaoProcessualService.recuperaProcesso(), 'VCiv_FBC', processInstance.contextInstance.variables)}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:encaminhar_analise_secretaria', true)}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
