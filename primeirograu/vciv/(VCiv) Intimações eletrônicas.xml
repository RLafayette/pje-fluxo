<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="(VCiv) Intimações eletrônicas">
    <description><![CDATA[Realiza intimações eletrônicas do último ato proferido.]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338,6:1469')}" actor-id="#{actor.id}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - (VCiv) Intimações eletrônicas">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1338')}" actor-id="#{actor.id}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria" priority="3"/>
        <transition to="(VCiv) Informar dados de intimação eletrônica" name="(VCiv) Informar dados de intimação eletrônica"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="(VCiv) Informar dados de intimação eletrônica">
        <task name="(VCiv) Informar dados de intimação eletrônica" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="prazoIntimacaoAtivo" mapped-name="number:prazoIntimacaoAtivo" access="read,write,required"/>
                <variable name="prazoIntimacaoPassivo" mapped-name="number:prazoIntimacaoPassivo" access="read,write,required"/>
            </controller>
        </task>
        <description><![CDATA[prazoIntimacaoAtivo: Prazo em dias para o(s) advogado(s) do polo ativo (0 - para sem prazo; 99 - para não intimar)
prazoIntimacaoPassivo: Prazo em dias para o(s) advogado(s) do polo passivo (0 - para sem prazo; 99 - para não intimar)]]></description>
        <transition to="Nó de Desvio - (VCiv) Intimações eletrônicas" name="Nó de Desvio - (VCiv) Intimações eletrônicas">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Término" name="Cancelar e sair da tarefa"/>
        <transition to="(VCiv) Separação em intimação eletrônica" name="Prosseguir"/>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:dispensaRequeridos', 'Cancelar e sair da tarefa')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('number:prazoIntimacaoAtivo', '99')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('number:prazoIntimacaoPassivo', '99')}"/>
        </event>
    </task-node>
    <end-state name="Término">
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('prazoIntimacaoAtivo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('prazoIntimacaoPassivo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('inaptosAtivo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('inaptosPassivo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('enviarAtivo')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('enviarPassivo')}"/>
        </event>
    </end-state>
    <task-node end-tasks="true" name="Nó de Desvio - (VCiv) Intimações eletrônicas">
        <task name="Nó de Desvio - (VCiv) Intimações eletrônicas" swimlane="Nó de Desvio - (VCiv) Intimações eletrônicas" priority="3"/>
        <transition to="Término" name="Término"/>
        <transition to="(VCiv) Informar dados de intimação eletrônica" name="(VCiv) Informar dados de intimação eletrônica"/>
        <transition to="(VCiv) Aviso - Intimar advogados automaticamente" name="(VCiv) Aviso - Intimar advogados automaticamente"/>
    </task-node>
    <fork name="(VCiv) Separação em intimação eletrônica">
        <transition to="(VCiv) Tem polo ativo ?" name="(VCiv) Tem polo ativo ?"/>
        <transition to="(VCiv) Tem polo passivo ?" name="(VCiv) Tem polo passivo ?"/>
    </fork>
    <join name="(VCiv) Junção em intimação eletrônica">
        <transition to="(VCiv) Existem inaptos ?" name="(VCiv) Existem inaptos ?"/>
    </join>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoAtivo') and tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoAtivo') != 99 ? '(VCiv) Verificar inaptos polo ativo' : '(VCiv) Junção em intimação eletrônica'}" name="(VCiv) Tem polo ativo ?">
        <transition to="(VCiv) Verificar inaptos polo ativo" name="(VCiv) Verificar inaptos polo ativo"/>
        <transition to="(VCiv) Junção em intimação eletrônica" name="(VCiv) Junção em intimação eletrônica"/>
    </decision>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoPassivo') and tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoPassivo') != 99 ? '(VCiv) Verificar inaptos polo passivo' : '(VCiv) Junção em intimação eletrônica'}" name="(VCiv) Tem polo passivo ?">
        <transition to="(VCiv) Verificar inaptos polo passivo" name="(VCiv) Verificar inaptos polo passivo"/>
        <transition to="(VCiv) Junção em intimação eletrônica" name="(VCiv) Junção em intimação eletrônica"/>
    </decision>
    <node name="(VCiv) Verificar inaptos polo ativo">
        <transition to="(VCiv) Junção em intimação eletrônica" name="(VCiv) Junção em intimação eletrônica"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('enviarAtivo', 'true')}"/>
            <action expression="#{atoComunicacaoService.naoAptosImtimar(tramitacaoProcessualService.recuperaProcesso(),tramitacaoProcessualService.listProcessoParteToListpessoa(tramitacaoProcessualService.recuperaProcesso().getListaAdvogadosPoloAtivo()) ,'inaptosAtivo')}"/>
        </event>
    </node>
    <node name="(VCiv) Verificar inaptos polo passivo">
        <transition to="(VCiv) Junção em intimação eletrônica" name="(VCiv) Junção em intimação eletrônica"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('enviarPassivo', 'true')}"/>
            <action expression="#{atoComunicacaoService.naoAptosImtimar(tramitacaoProcessualService.recuperaProcesso(),tramitacaoProcessualService.listProcessoParteToListpessoa(tramitacaoProcessualService.recuperaProcesso().getListaAdvogadosPoloPassivo()) ,'inaptosPassivo')}"/>
        </event>
    </node>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('inaptosAtivo') or not empty tramitacaoProcessualService.recuperaVariavel('inaptosPassivo') ? '(VCiv) Aviso - Intimar advogados automaticamente' : '(VCiv) Deve realizar intimação ?'}" name="(VCiv) Existem inaptos ?">
        <transition to="(VCiv) Aviso - Intimar advogados automaticamente" name="(VCiv) Aviso - Intimar advogados automaticamente"/>
        <transition to="(VCiv) Deve realizar intimação ?" name="(VCiv) Deve realizar intimação ?"/>
    </decision>
    <task-node end-tasks="true" name="(VCiv) Aviso - Intimar advogados automaticamente">
        <task name="(VCiv) Aviso - Intimar advogados automaticamente" swimlane="Secretaria" priority="3">
            <controller>
                <variable name="aviso" mapped-name="textAlert:aviso" access="read,write"/>
                <variable name="poloAtivo" mapped-name="textAlert:poloAtivo" access="read,write"/>
                <variable name="advogadosPoloAtivo" mapped-name="textAlert:advogadosPoloAtivo" access="read,write"/>
                <variable name="poloPassivo" mapped-name="textAlert:poloPassivo" access="read,write"/>
                <variable name="advogadosPoloPassivo" mapped-name="textAlert:advogadosPoloPassivo" access="read,write"/>
                <variable name="avisoConfirmar" mapped-name="textAlert:avisoConfirmar" access="read,write"/>
                <variable name="avisoRetornar" mapped-name="textAlert:avisoRetornar" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[aviso:*Foram encontrados os seguintes problemas nesta comunicação:*
poloAtivo:#{tramitacaoProcessualService.recuperaVariavel('inaptosAtivo') != null ? 'Polo ativo:' : ''}
advogadosPoloAtivo: #{tramitacaoProcessualService.recuperaVariavel('inaptosAtivo') != null ? tramitacaoProcessualService.recuperaVariavel('inaptosAtivo') : ''}
poloPassivo: #{tramitacaoProcessualService.recuperaVariavel('inaptosPassivo') != null ? 'Polo passivo:' : ''}
advogadosPoloPassivo:#{tramitacaoProcessualService.recuperaVariavel('inaptosPassivo') != null ? tramitacaoProcessualService.recuperaVariavel('inaptosPassivo') : ''}
avisoConfimar: Ao CONFIRMAR, o advogado cadastrado no processo, mas que não tenha a situação regular no sistema PJe, não será intimado deste último ato produzido.
avisoRetornar: Ao RETORNAR, esta intimação eletrônica não mais ocorrerá e o processo voltará à tarefa de  #{tramitacaoProcessualService.recuperaVariavel('vciv:fbc:saida_intelet_cancelado')}.]]></description>
        <transition to="Nó de Desvio - (VCiv) Intimações eletrônicas" name="Nó de Desvio - (VCiv) Intimações eletrônicas">
            <condition expression="#{true}"/>
        </transition>
        <transition to="(VCiv) Sinalizar cancelamento" name="Retornar"/>
        <transition to="(VCiv) Deve realizar intimação ?" name="Confirmar"/>
    </task-node>
    <fork name="(VCiv) Separação execução intimação">
        <transition to="(VCiv) Enviar ativo ?" name="(VCiv) Enviar ativo ?"/>
        <transition to="(VCiv) Enviar passivo ?" name="(VCiv) Enviar passivo ?"/>
    </fork>
    <join name="(VCiv) Junção execução intimação">
        <transition to="(VCiv) É juizado?" name="(VCiv) É juizado?"/>
    </join>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('enviarAtivo') &amp;&amp; tramitacaoProcessualService.recuperaVariavel('enviarAtivo') ? '(VCiv) Executar intimação ativos' : '(VCiv) Junção execução intimação'}" name="(VCiv) Enviar ativo ?">
        <transition to="(VCiv) Executar intimação ativos" name="(VCiv) Executar intimação ativos"/>
        <transition to="(VCiv) Junção execução intimação" name="(VCiv) Junção execução intimação"/>
    </decision>
    <decision expression="#{not empty tramitacaoProcessualService.recuperaVariavel('enviarPassivo') &amp;&amp; tramitacaoProcessualService.recuperaVariavel('enviarPassivo') ? '(VCiv) Executar intimação passivos' : '(VCiv) Junção execução intimação'}" name="(VCiv) Enviar passivo ?">
        <transition to="(VCiv) Executar intimação passivos" name="(VCiv) Executar intimação passivos"/>
        <transition to="(VCiv) Junção execução intimação" name="(VCiv) Junção execução intimação"/>
    </decision>
    <node name="(VCiv) Executar intimação ativos">
        <transition to="(VCiv) Junção execução intimação" name="(VCiv) Junção execução intimação"/>
        <event type="node-enter">
            <action expression="${atoComunicacaoService.intimarEletronicamente(tramitacaoProcessualService.recuperaProcesso().idProcessoTrf, tramitacaoProcessualService.listProcessoParteToListpessoa(tramitacaoProcessualService.recuperaProcesso().getListaAdvogadosPoloAtivo()), (empty tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoAtivo') or tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoAtivo') == 0) ? 'S' : 'D', (empty tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoAtivo') or tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoAtivo') == 0) ? null : tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoAtivo'), tramitacaoProcessualService.recuperaVariavel('pje:atoProferido'))}"/>
        </event>
    </node>
    <node name="(VCiv) Executar intimação passivos">
        <transition to="(VCiv) Junção execução intimação" name="(VCiv) Junção execução intimação"/>
        <event type="node-enter">
            <action expression="#{atoComunicacaoService.intimarEletronicamente(tramitacaoProcessualService.recuperaProcesso().idProcessoTrf, tramitacaoProcessualService.listProcessoParteToListpessoa(tramitacaoProcessualService.recuperaProcesso().getListaAdvogadosPoloPassivo()), (empty tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoPassivo') or tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoPassivo') == 0) ? 'S' : 'D', (empty tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoPassivo') or tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoPassivo') == 0) ? null : tramitacaoProcessualService.recuperaVariavel('prazoIntimacaoPassivo'), tramitacaoProcessualService.recuperaVariavel('pje:atoProferido'))}"/>
        </event>
    </node>
    <process-state name="(VCiv) Publicar intimação eletrônica no DJEN">
        <sub-process name="(VCiv) Publicação no DJEN" binding="late"/>
        <transition to="(VCiv) Controle de Prazo" name="(VCiv) Controle de Prazo"/>
    </process-state>
    <process-state name="(VCiv) Informar DJe">
        <sub-process name="(VCiv) Publicações no DJe" binding="late"/>
        <transition to="(VCiv) Controle de Prazo" name="(VCiv) Controle de Prazo"/>
    </process-state>
    <process-state name="(VCiv) Controle de Prazo">
        <sub-process name="(VCiv) Controle de prazos e retorno de expedientes" binding="late"/>
        <transition to="Término" name="Término"/>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('vciv:cpre:sistema')}"/>
        </event>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:cpre:sistema','true')}"/>
        </event>
    </process-state>
    <node name="(VCiv) Sinalizar cancelamento">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('vciv:intelet:cancelou','true')}"/>
        </event>
    </node>
    <decision expression="#{not (not empty tramitacaoProcessualService.recuperaVariavel('enviarAtivo') &amp;&amp; tramitacaoProcessualService.recuperaVariavel('enviarAtivo')) &amp;&amp;  not (not empty tramitacaoProcessualService.recuperaVariavel('enviarPassivo') &amp;&amp; tramitacaoProcessualService.recuperaVariavel('enviarPassivo')) ? '(VCiv) Sinalizar cancelamento' : '(VCiv) Separação execução intimação'}" name="(VCiv) Deve realizar intimação ?">
        <transition to="(VCiv) Separação execução intimação" name="(VCiv) Separação execução intimação"/>
        <transition to="(VCiv) Sinalizar cancelamento" name="(VCiv) Sinalizar cancelamento"/>
    </decision>
    <decision expression="#{util.eval(parametroUtil.getParametro('pje:tjrn:vciv:DefinicaoPublicaDJEN')) ?  '(VCiv) Controle de Prazo' : '(VCiv) Publicar intimação eletrônica no DJEN'}" name="(VCiv) É juizado?">
        <transition to="(VCiv) Controle de Prazo" name="(VCiv) Controle de Prazo"/>
        <transition to="(VCiv) Publicar intimação eletrônica no DJEN" name="(VCiv) Publicar intimação eletrônica no DJEN"/>
    </decision>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>